(function () {
	var obj =  function (IO, env, pkg, _pool, server, host, isSSL) {
		let me = this;

		me.callbackMessage = function (incomeData, data) {
			let me = this;
			data.session_id = new Date().getTime() + '.' + ((!incomeData.session_id) ? '' : incomeData.session_id)  + '.' + IO.getSN();
			data.isSSL = isSSL;
			IO.io.to(me._socket.id).emit('_callbackMessage_', data);
		};
		me.deliveryMessage = function (toId, data) {
			let me = this;
			data._host = host;
			IO.io.to(toId).emit('_incomeMessage_', data);	
		};
	
		me.onConnection = function (socket) {
			me.CommIP = IO.host2ip(host);
			me._socket = socket;
			if (!me.CommIP) {
				return true;
			}
			var sequenceNumberByClient = new Map();	
			
			if (!IO.isIOSType(host, 'comm')) {
				socket.disconnect();
				return true;
			}
			
			
			socket.on('clientRequest', function(incomeData){ 
				// incomeData.session_id = new Date().getTime() + '.' + ((!incomeData.session_id) ? '' : incomeData.session_id)  + '.' + IO.getSN();
				switch(incomeData.cmd) {
					case 'createRoom':
						if (!incomeData.room) {
							me.callbackMessage(incomeData, {
								data: {success : false, message: 'Miss room'}
							});
						} else {
						//	console.log(incomeData);
							socket.join(incomeData.room, function() {
								IO.io.in(incomeData.room).clients((err, clients) => {
								me.callbackMessage(incomeData,{success : true, 
								 	success : true,
									host : host,    
									room : host + '::' + incomeData.room,
									clients :  clients});
								});
							});
						}
						break;
					default : 
						me.deliveryMessage(me._socket.id, {
							session_id : incomeData.session_id,
							data: {success : false, message: 'miss cmd'}
						});
				}
			});
			
			sequenceNumberByClient.set(socket, 1);
			
			socket.on("disconnect", () => {
				// console.log('--PPP--' + host);
				// delete IO.mapping[uniqueId];
				sequenceNumberByClient.delete(socket);
			});
		};
		
	};
	
	if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {
		module.exports = obj;
	} 
})();
